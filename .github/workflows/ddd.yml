
name: ddeploys asa ad

on: 
  push:
    branches: [ci/workflows]
    
jobs:
  Build-Production:
    runs-on: ubuntu-latest
    name: Build ubuntu - Node 16.18.x

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Use Node.js 16.18.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.18.x
        cache: npm

    - name: Build App
      run: |
        npm install
        npm run build

    - name: Make App
      run: |
        mkdir backend-build
        mkdir backend-build/src
        mv dist/ src/
        mv src/ backend-build/src/
        mv prisma/ backend-build/prisma/
        mv package.json backend-build/
        ls -la

    - name: Upload da pasta dist
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  Deploy-Production:
    environment: production
    runs-on: ubuntu-latest
    name: Deploy AWS EC2
    needs: [Build-Production]

    steps:
    - name: Use Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.18.x

    - name: Upload da pasta dist
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - run: ls -la
    - run: mkdir backend-build
    - run: mv dist/ backend-build/dist
    - run: echo "PORT=${{ vars.AWS_API_PORT }}" > backend-build/.env
    - run: mv prisma/ backend-build/prisma
    - run: mv package.json backend-build/

    - name: Login AWS EC2 Ubuntu
      uses: easingthemes/ssh-deploy@main
      env:
        SSH_PRIVATE_KEY: ${{ secrets.AWS_API_PRIVATE_KEY  }}
        ARGS: "-rlgoDzvc -i --delete"
        SOURCE: "backend-build/"
        REMOTE_HOST: ${{ secrets.AWS_API_HOST }}
        REMOTE_USER: ${{ secrets.AWS_API_USER }}
        TARGET: "${{ vars.AWS_API_TARGET }}"
        EXCLUDE: "/backend-build//, /node_modules/"

